@model CostAllocationApp.ViewModels.ForecastViewModal

@{
    ViewBag.Title = "実績（Actual Cost）";
}
@section Styles {
    <link href="/Content/common.css" rel="stylesheet" type="text/css" />
    <link href="/Content/actualcost.css" rel="stylesheet" type="text/css" />
}

<div class="content container-fluid" style="position:relative;margin-top: -38px;">
    <!-----------------Show Loader----------------->
    <div class="row">
        <div class="col-md-12">
            <div class="forecast">
                <div id="loading" style="display:none;position:absolute;left:0;top:-147px;  width:100%;height:100%;">
                    <center>
                        <img src="/img/forecast_loader.gif" height="250" width="250" style="margin-top:200px;" alt="loader">
                        <br>
                        <strong>Please wait a moment...</strong>
                        <br>
                        <br>
                    </center>
                </div>
            </div>
        </div>
    </div>
    <!-----------------Employee Assignment: Create Actual Cost----------------->
    <div class="row">
        <div class="col-3">
            <select id="assignment_year" class="" ></select>
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-light mb-2" id="actual_cost" >表示</button>
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-md-12">
            <div id="hider"></div>
            <div id="actual_cost_table_header"><span id="nav1">年度データー</span>><span id="nav2">年度データーの編集</span></div>
            <div id="jspreadsheet"></div>
        </div>

    </div>

</div>

<div class="search_p">
    <ul id="search_p_asc_desc">
        <li><i id="search_p_asc" class="fa fa-sort-alpha-asc" aria-hidden="true" onclick="ColumnOrder(3,1)"></i> <span id="search_p_asc_text">Ascending</span></li>
        <li><i id="search_p_desc" class="fa fa-sort-alpha-desc" aria-hidden="true" onclick="ColumnOrder(3,0)"></i><span id="search_p_desc_text">Descending</span></li>
    </ul>
    @*<select id="search_p_search" multiple></select>*@
    <input type="text" id="search_p_text_box"/>
    <ul id="search_p_search">

    </ul>
    <div class="search_p_footer">
        <button type="button" onclick="GetEmployeeName()">Ok</button>
        <button type="button" data-dismiss="modal" id="buttonClose">Close</button>
    </div>
</div>

@*<input type="hidden" id="hidSectionId" />
    <input type="hidden" id="hidDepartmentId" />
    <input type="hidden" id="hidInChargeId" />
    <input type="hidden" id="hidRoleId" />
    <input type="hidden" id="hidExplanationId" />
    <input type="hidden" id="hidCompanyid" />
    <input type="hidden" id="hidForecastYear" value="2023" />*@


@section Scripts{
    <script src="/Scripts/common.js"></script>
    @*<script src="/Scripts/forecast_ver04.js"></script>*@
    <script src="~/Scripts/actualcost.js"></script>
    <script src="/Scripts/bootstrap-multiselect.js"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">
        $.connection.hub.disconnected(function () {
            setTimeout(function () {
                $.connection.hub.start();
            }, 5000); // Restart connection after 5 seconds.
        });

        $.connection.hub.start();

        $(function () {
            var chat = $.connection.chatHub;
            //$.connection.hub.start();
            //debugger;
            //console.log(chat);
            chat.client.addNewMessageToPage = function (name, message) {
                if (message != $('#user_name').text()) {
                    alert(name + message);
                }

                $.ajax({
                    url: `/api/utilities/GetUserLogs/`,
                    contentType: 'application/json',
                    type: 'GET',
                    async: false,
                    dataType: 'json',
                    success: function (data) {
                        var userName = $('#user_name').text();
                        $('#user_log').empty();
                        $.each(data, (index, value) => {
                            if (userName != value.UserName) {
                                $('#user_log').append(`<li style="float:left;background-color:lightgrey; border-radius:50px; overflow:hidden;margin-right:5px;">${value.UserName}</li>`);
                            }

                        });

                    }
                });
            };
        });

        $(document).ready(function () {
            setInterval(() => {
                $.ajax({
                    url: `/api/utilities/GetUserLogs/`,
                    contentType: 'application/json',
                    type: 'GET',
                    async: false,
                    dataType: 'json',
                    success: function (data) {
                        var userName = $('#user_name').text();
                        $('#user_log').empty();
                        $.each(data, (index, value) => {
                            if (userName !== value.UserName) {
                                $('#user_log').append(`<li style="float:left;background-color:lightgrey; border-radius:50px; overflow:hidden;margin-right:5px;">${value.UserName}</li>`);
                            }
                        });

                    }
                });
            }, 5000);
            //$("table1").DataTable();
        });
            //function bs_input_file() {
            //    $(".input-file").before(
            //        function () {
            //            if (!$(this).prev().hasClass('input-ghost')) {
            //                var element = $("<input type='file' id='dataFile' name='upload' class='input-ghost' style='visibility:hidden; height:0'>");
            //                element.attr("name", $(this).attr("name"));
            //                element.change(function () {
            //                    element.next(element).find('input').val((element.val()).split('\\').pop());
            //                });
            //                $(this).find("button.btn-choose").click(function () {
            //                    element.click();
            //                });
            //                $(this).find("button.btn-reset").click(function () {
            //                    element.val(null);
            //                    $(this).parents(".input-file").find('input').val('');
            //                });
            //                $(this).find('input').css("cursor", "pointer");
            //                $(this).find('input').mousedown(function () {
            //                    $(this).parents('.input-file').prev().click();
            //                    return false;
            //                });
            //                return element;
            //            }
            //        }
            //    );
            //}

            //function clear() {
            //    var input = $("#dataFile").val('');
            //};
            //$(function () {
            //    clear();
            //    bs_input_file();
            //});
    </script>
}


